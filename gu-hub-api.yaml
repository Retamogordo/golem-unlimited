swagger: '2.0'
info:
  title: Golem unlimited low level hub API
  description: API description in Markdown.
  version: 1.0.0
host: '127.0.0.1:61622'
tags:
  - name: hub-session
    description: HUB Session managment.
  - name: peer-info
    description: Unlimited network peer info managment.
  - name: peer-session
  - name: lob-man
    description: Large objects managment

schemes:
  - http
security:
  - serviceToken: []
  - systemName: []
paths:
  /peer:
    get:
      tags:
        - peer-info
      operationId: listPeers
      summary: Returns a list hub peers.
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PeerInfo'
  /peer/{nodeId}:
    parameters:
      - $ref: '#/parameters/nodeId'
    get:
      tags:
        - peer-info
      operationId: getPeerDetails
      summary: 'Returns detailed peer info'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PeerInfo'

  /sessions:
    get:
      tags:
        - hub-session
      summary: Lists current hub sessions.
      operationId: listHubSessions
      parameters:
        - $ref: '#/parameters/limit'
          type: integer
          in: query
          allowEmptyValue: true
          default: 50
        - $ref: '#/parameters/offset'
          type: integer
          in: query
          allowEmptyValue: true
          default: 0
      responses:
        '200':
          description: OK list sessions
          schema:
            type: array
            items:
              $ref: '#/definitions/HubSession'
    post:
      tags:
        - hub-session
      operationId: createHubSession
      parameters:
        - name: newSessionSpec
          in: body
          schema:
            $ref: '#/definitions/HubSession'
      responses:
        '201':
          description: Session created
          schema:
            type: string
            description: Created hub session id
        '500':
          description: Error
          schema:
            type: string
            description: Error message
  '/sessions/{sessionId}':
    parameters:
      - $ref: '#/parameters/sessionId'
    get:
      tags:
        - hub-session
      summary: Gets hub session info
      operationId: getHubSession
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HubSession'
        '404':
          description: Session not found
        '500':
          description: Internal Error
          schema:
            type: object
    patch:
      tags:
        - hub-session
      summary: 'Hub session update'
      consumes:
        - application/json
      parameters:
        - name: changes
          in: body
          schema:
            $ref: '#/definitions/HubSessionCommand'

      responses:
        200:
          description: OK

    delete:
      tags:
        - hub-session
      responses:
        200:
          description: Deleted
        404:
          description: 'Session not found'
  '/sessions/{sessionId}/config':
    parameters:
      - $ref: '#/parameters/sessionId'
    get:
      tags:
        - hub-session
      summary: Gets configuration from stash
      operationId: getHubSessionConfig
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigStash'
        '404':
          description: Session not found
        '500':
          description: Internal Error
    put:
      tags:
        - hub-session
      summary: Sets configuration stash
      operationId: setHubSessionConfiguration
      parameters:
        - name: config
          description: New config stash value
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfigStash'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              version:
                type: integer
            additionalProperties: true
        '404':
          description: Session not found
        '409':
          description: Conflicting version
  '/sessions/{sessionId}/peer':
    parameters:
      - $ref: '#/parameters/sessionId'
    post:
      tags:
        - hub-session
      summary: Manually adds peers to hub session
      operationId: addHubSessionPeers
      parameters:
        - name: peer_list
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
      responses:
        '200':
          description: OK - peers added
          schema:
            type: array
            items:
              type: string
              description: peer id
            example:
              - '0xb6804992598b9260a5b4ad553f98c3851cf2d18e'
            description: list of session nodes after add
        '404':
          description: Session not found
        '500':
          description: Internal Error
  '/sessions/{sessionId}/peer/{nodeId}/peer-sessions':
    post:
      tags:
        - peer-session
      operationId: createPeerSession
      parameters:
        - $ref: '#/parameters/sessionId'
        - $ref: '#/parameters/nodeId'
        - name: sessionSpec
          in: body
          required: true
          schema:
            $ref: '#/definitions/PeerSessionSpec'
      responses:
        '201':
          description: created
          headers:
            location:
              type: string
              format: uri
              description: 'Uri of new peer session'
          schema:
            type: string
            description: exec environment session instance id
        '404':
          description: not found (session / peer)
  '/sessions/{sessionId}/peer/{nodeId}/peer-sessions/{hubSession}':
    parameters:
      - $ref: '#/parameters/sessionId'
      - $ref: '#/parameters/nodeId'
      - name: hubSession
        in: path
        required: true
        type: string
    patch:
      tags:
        - peer-session
      operationId: updatePeerSession
      summary: 'Sends multiple commands for peer'
      consumes:
        - application/json
      produces: 
        - application/json
      parameters:
        - name: commands
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Command'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - peer-session
      operationId: deletePeerSession
      responses:
        204:
          description: Deleted

  /sessions/{sessionId}/blob:
    parameters:
      - $ref: '#/parameters/sessionId'
    post:
      tags:
        - lob-man
      operationId: createBlob
      summary: 'Creates new lob'
      responses:
        201:
          description: Created
          schema:
            type: string
            description: 'BLob uniq id'
        404:
          description: 'Session not found'
    get:
      tags:
        - lob-man
      operationId: listHubSessionBlobs
      summary: 'Lists currently allocated lobs'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BlobInfo'
        404:
          description: 'Session not found'

  /sessions/{sessionId}/blob/{blobId}:
    parameters:
      - $ref: '#/parameters/sessionId'
      - name: blobId
        description: 'Blob identifier'
        type: string
        in: path
        required: true
    put:
      tags:
        - lob-man
      operationId: uploadBlob
      parameters:
        - name: body
          in: body
          schema:
            type: string
            format: binary
      consumes:
        - application/octet-stream
      responses:
        200:
          description: OK
    get:
      tags:
        - lob-man
      operationId: downloadBlob
      responses:
        200:
          description: OK
          schema:
            type: file


definitions:
  PeerInfo:
    description: General information about GU subnetwork node
    required:
      - peerAddr
    properties:
      nodeName:
        type: string
        description: Node name or hostname from reverse dns if node name is not set
      peerAddr:
        type: string
        description: 'node address from current connection formated as <ip-addr>:<port>'
      nodeId:
        type: string
        description: node public key hash in etherium format
        example: '0x875f272d3b9e7b55a5784a131a60bf3d7a42c73c'
        readOnly: true
      tags:
        type: array
        items:
          type: string
  HubSession:
    properties:
      id:
        type: string
        description: Uniqe HUB Session identifier
        example: 47f1dc88-0282-4ac3-f765-02b303e8c278
        readOnly: true
      created:
        type: string
        description: Session creation timestamp
        format: date-time
        readOnly: true
      expires:
        type: string
        format: date-time
      allocation:
        type: string
        description: resource allocation mode
        enum:
          - manual
          - auto
      name:
        type: string
        description: optional human readable name
      tags:
        type: array
        uniqueItems: true
        items:
          type: string
          pattern: '^[a-zA-Z][a-zA-Z0-9_:-]*$'
  PeerSessionSpec:
    properties:
      envType:
        $ref: '#/definitions/EnvType'
      image:
        properties:
          hash:
            type: string
            description: Consistency hash
          url:
            type: string
            description: Image location spec
      name:
        type: string
        description: human readable name
      tags:
        type: array
        description: peer session tags
        uniqueItems: true
        items:
          type: string
  Command:
    type: object
    properties:
      exec:
        $ref: '#/definitions/ExecCommand'
      start:
        $ref: '#/definitions/StartCommand'
      stop:
        $ref: '#/definitions/StopCommand'
      addTags:
        type: array
        uniqueItems: true
        items:
          type: string
      delTags:
        type: array
        uniqueItems: true
        items:
          type: string
      downloadFile:
        $ref: '#/definitions/DownloadFileCommand'
      uploadFile:
        $ref: '#/definitions/UploadFileCommand'
  ExecCommand:
    description: synchronous exec of session entry point
    type: object
    properties:
      executable:
        type: string
      args:
        type: array
        items:
          type: string
  StartCommand:
    properties:
      executable:
        type: string
      args:
        type: array
        items:
          type: string
  StopCommand:
    properties:
      childId:
        description: 'id of asynchronous process, started with StartCommand'
        type: string
  DownloadFileCommand:
    properties:
      uri:
        type: string
        format: url
      filePath:
        type: string
  UploadFileCommand:
    properties:
      uri:
        type: string
        format: url
      filePath:
        type: string
  ConfigStash:
    description: 'Free style configuration object'
    type: object
    properties:
      version:
        type: integer
        description: Version number
    additionalProperties: {}

  EnvType:
    description: |-
      Exec environment type.

      * hd - Host Direct mode
      * docker - Docker Container mode
      * wasm - WebAssembly mode
      * vm - virtual machine mode.

    type: string
    enum:
      - hd
      - docker
      - wasm
      - graphne
      - vm
  BlobInfo:
    type: object
    description: 'Binary large object basic information'
    required:
      - id
    properties:
      id:
        type: string
        description: 'blob id'
      hash:
        type: string
        description: 'SHA3-256 of blob contents if calculated'
      size:
        type: integer
        format: int64
        description: 'blob size in bytes'
      tags:
        type: array
        description: 'Additional tags'
        items:
          type: string
        uniqueItems: true
      name:
        type: string
        description: 'optional human readable blob name'

  HubSessionCommand:
    type: object
    discriminator: commandType
    required:
      - commandType
    properties:
      commandType:
        type: string
      ts:
        type: string
        format: date-time

  HubSessionTouchCommand:
    allOf:
      - $ref: '#/definitions/HubSessionCommand'
      - type: object
        properties:
          keepUntil:
            type: string
            format: date-time


securityDefinitions:
  serviceToken:
    type: apiKey
    in: header
    name: X-GU-APIKEY
    description: 'Service token'
  systemName:
    type: apiKey
    in: header
    name: X-GU-APPNAME
    description: 'Integration identifier'
parameters:
  limit:
    name: limit
    type: integer
    in: query
    allowEmptyValue: true
    default: 50
  offset:
    name: offset
    type: integer
    in: query
    allowEmptyValue: true
    default: 0
  sessionId:
    name: sessionId
    type: string
    in: path
    required: true
  nodeId:
    name: nodeId
    description: 'GU Network node identifier'
    in: path
    required: true
    type: string
    pattern: '0x[0-9a-f]{40}'
